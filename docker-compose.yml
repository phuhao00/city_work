version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: city_work_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: city_work
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - city_work_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: city_work_elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=elastic123
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - city_work_network

  redis:
    image: redis:7.2-alpine
    container_name: city_work_redis
    restart: unless-stopped
    command: redis-server --requirepass redis123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - city_work_network



  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: ../docker/backend/Dockerfile
    container_name: city_work_backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=mongodb://admin:password123@mongodb:27017/city_work?authSource=admin
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis123
      - ELASTICSEARCH_NODE=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=elastic123
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_EXPIRES_IN=7d
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
      - redis
      - elasticsearch
    networks:
      - city_work_network
    volumes:
      - ./backend/uploads:/app/uploads

  # Frontend Web Service
  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend/Dockerfile
    container_name: city_work_frontend
    restart: unless-stopped
    environment:
      - EXPO_PUBLIC_API_BASE_URL=http://localhost:3000/api
      - EXPO_PUBLIC_WS_URL=ws://localhost:3000
    ports:
      - "19006:19006"
    depends_on:
      - backend
    networks:
      - city_work_network

volumes:
  mongodb_data:
  elasticsearch_data:
  redis_data:

networks:
  city_work_network:
    driver: bridge