version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: city_work_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: city_work
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - city_work_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: city_work_elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=elastic123
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - city_work_network

  redis:
    image: redis:7.2-alpine
    container_name: city_work_redis
    restart: unless-stopped
    command: redis-server --requirepass redis123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - city_work_network

  # Optional: Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: city_work_redis_commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
      - REDIS_PASSWORD=redis123
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - city_work_network

  # Optional: Kibana for Elasticsearch management
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: city_work_kibana
    restart: unless-stopped
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=elastic123
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - city_work_network

volumes:
  mongodb_data:
  elasticsearch_data:
  redis_data:

networks:
  city_work_network:
    driver: bridge